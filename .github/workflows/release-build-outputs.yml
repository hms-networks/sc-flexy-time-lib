# HMS Networks Solution Center
# Build Outputs Action for Maven-based Ewon ETK Project Releases
# Version: 1.0
#
# This action is configured to automatically run when a release
# tag is created in the following syntax: `v*`.

name: Release (Build Outputs)

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RELEASE_INCLUDED: README.md LICENSE src .classpath .project pom.xml build.xml
  RELEASE_JAR_NAME_REGEX: '*-full.jar'
  RELEASE_JAVADOCS_NAME_REGEX: '*-javadoc.jar'


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 16

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            target/buildJdk
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Compile Java Files With Maven
        run: mvn package -f pom.xml

      - name: Build Release Archive
        run: |
          zip release -r $RELEASE_INCLUDED $(find target -name $RELEASE_JAR_NAME_REGEX) $(find target -name $RELEASE_JAVADOCS_NAME_REGEX)

      - name: Create Release in Repository Releases
        if: ${{ contains(github.ref,'alpha') != true && contains(github.ref,'beta') != true && contains(github.ref,'pre') != true }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Create Pre-Release in Repository Releases
        if: ${{ contains(github.ref,'alpha') == true || contains(github.ref,'beta') == true || contains(github.ref,'pre') == true }}
        id: create_pre_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Pre-Release ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Upload Release Asset to Created Release
        if: ${{ contains(github.ref,'alpha') != true && contains(github.ref,'beta') != true && contains(github.ref,'pre') != true }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: ${{ github.event.repository.name }}-${{ github.ref }}.zip
          asset_content_type: application/zip

      - name: Upload Pre-Release Asset to Created Pre-Release
        if: ${{ contains(github.ref,'alpha') == true || contains(github.ref,'beta') == true || contains(github.ref,'pre') == true }}
        id: upload-pre-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_pre_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: ${{ github.event.repository.name }}-${{ github.ref }}.zip
          asset_content_type: application/zip